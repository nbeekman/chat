var fs = require('fs'),
jade = require('jade'),
cache = {}, 
options = {
  templates : './',
  cache:(process.env.NODE_ENV=='production'),
  jadeOptions:{
    client:true,
    compileDebug:false
  }
},

jaden = function (file, callback) {
  
  var contents;

  if (cache[file]) contents = cache[file];
  else {
    contents = fs.readFileSync(options.templates+'/'+file);
    if (options.cache) cache[file] = contents;
  }
  
  return jade.compile(contents, options.jadeOptions);
};

jaden.set = function (o, v) {
  switch (typeof o) {
    case 'object':
      for (option in o) {
        options[option] = o[option];
      }
      break;
    case 'string':
      options[o] = v;
      break;
    default:
      throw new Error('jade.set expects an object or string as first argument');
      break;
  }

};

module.exports = jaden;